{"id":"service.ts","dependencies":[{"name":"C:\\Users\\pc\\Desktop\\projects\\filmfavorite\\package.json","includedInParent":true,"mtime":1608293257685},{"name":"./app.const","loc":{"line":40,"column":26},"parent":"C:\\Users\\pc\\Desktop\\projects\\filmfavorite\\src\\service.ts","resolved":"C:\\Users\\pc\\Desktop\\projects\\filmfavorite\\src\\app.const.ts"}],"generated":{"js":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function sent() {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) {\n      try {\n        if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n        if (y = 0, t) op = [op[0] & 2, t.value];\n\n        switch (op[0]) {\n          case 0:\n          case 1:\n            t = op;\n            break;\n\n          case 4:\n            _.label++;\n            return {\n              value: op[1],\n              done: false\n            };\n\n          case 5:\n            _.label++;\n            y = op[1];\n            op = [0];\n            continue;\n\n          case 7:\n            op = _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n\n          default:\n            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n              _ = 0;\n              continue;\n            }\n\n            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n              _.label = op[1];\n              break;\n            }\n\n            if (op[0] === 6 && _.label < t[1]) {\n              _.label = t[1];\n              t = op;\n              break;\n            }\n\n            if (t && _.label < t[2]) {\n              _.label = t[2];\n\n              _.ops.push(op);\n\n              break;\n            }\n\n            if (t[2]) _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n        }\n\n        op = body.call(thisArg, _);\n      } catch (e) {\n        op = [6, e];\n        y = 0;\n      } finally {\n        f = t = 0;\n      }\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getData = void 0;\n\nvar app_const_1 = require(\"./app.const\");\n\nvar createBaseUrl = function createBaseUrl() {\n  return \"https://api.themoviedb.org/3/discover/movie?api_key=\" + app_const_1.movieDbAppKey;\n};\n\nvar baseUrl = createBaseUrl();\n\nvar getData = function getData() {\n  return __awaiter(void 0, void 0, Promise, function () {\n    var json;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          return [4\n          /*yield*/\n          , fetch(baseUrl + \"&language=en-US&sort_by=popularity.desc&include_adult=false&include_video=false&page=1\")];\n\n        case 1:\n          json = _a.sent();\n          return [2\n          /*return*/\n          , json.json()];\n      }\n    });\n  });\n};\n\nexports.getData = getData;"},"sourceMaps":{"js":{"mappings":[{"source":"service.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":151,"column":0}},{"source":"service.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":151,"column":4}},{"source":"service.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":151,"column":15}},{"source":"service.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":151,"column":18}},{"source":"service.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":151,"column":25}},{"source":"service.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":151,"column":26}},{"source":"service.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":151,"column":39}},{"source":"service.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":151,"column":40}},{"source":"service.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":153,"column":0}},{"source":"service.ts","name":null,"original":{"line":3,"column":6},"generated":{"line":153,"column":4}},{"source":"service.ts","name":null,"original":{"line":3,"column":19},"generated":{"line":153,"column":17}},{"source":"service.ts","name":null,"original":{"line":3,"column":22},"generated":{"line":153,"column":20}},{"source":"service.ts","name":null,"original":{"line":3,"column":6},"generated":{"line":153,"column":29}},{"source":"service.ts","name":null,"original":{"line":3,"column":22},"generated":{"line":153,"column":42}},{"source":"service.ts","name":null,"original":{"line":3,"column":22},"generated":{"line":153,"column":45}},{"source":"service.ts","name":null,"original":{"line":4,"column":2},"generated":{"line":154,"column":0}},{"source":"service.ts","name":null,"original":{"line":4,"column":9},"generated":{"line":154,"column":9}},{"source":"service.ts","name":null,"original":{"line":4,"column":64},"generated":{"line":154,"column":66}},{"source":"service.ts","name":null,"original":{"line":4,"column":64},"generated":{"line":154,"column":77}},{"source":"service.ts","name":null,"original":{"line":4,"column":64},"generated":{"line":154,"column":78}},{"source":"service.ts","name":null,"original":{"line":4,"column":2},"generated":{"line":154,"column":91}},{"source":"service.ts","name":null,"original":{"line":5,"column":1},"generated":{"line":155,"column":0}},{"source":"service.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":155,"column":1}},{"source":"service.ts","name":null,"original":{"line":7,"column":0},"generated":{"line":157,"column":0}},{"source":"service.ts","name":null,"original":{"line":7,"column":6},"generated":{"line":157,"column":4}},{"source":"service.ts","name":null,"original":{"line":7,"column":13},"generated":{"line":157,"column":11}},{"source":"service.ts","name":null,"original":{"line":7,"column":16},"generated":{"line":157,"column":14}},{"source":"service.ts","name":null,"original":{"line":7,"column":29},"generated":{"line":157,"column":27}},{"source":"service.ts","name":null,"original":{"line":7,"column":0},"generated":{"line":157,"column":29}},{"source":"service.ts","name":null,"original":{"line":9,"column":7},"generated":{"line":159,"column":0}},{"source":"service.ts","name":null,"original":{"line":9,"column":13},"generated":{"line":159,"column":4}},{"source":"service.ts","name":null,"original":{"line":9,"column":20},"generated":{"line":159,"column":11}},{"source":"service.ts","name":null,"original":{"line":9,"column":23},"generated":{"line":159,"column":14}},{"source":"service.ts","name":null,"original":{"line":9,"column":13},"generated":{"line":159,"column":23}},{"source":"service.ts","name":null,"original":{"line":9,"column":23},"generated":{"line":159,"column":30}},{"source":"service.ts","name":null,"original":{"line":9,"column":23},"generated":{"line":159,"column":33}},{"source":"service.ts","name":null,"original":{"line":9,"column":23},"generated":{"line":160,"column":0}},{"source":"service.ts","name":null,"original":{"line":9,"column":23},"generated":{"line":160,"column":9}},{"source":"service.ts","name":null,"original":{"line":9,"column":23},"generated":{"line":160,"column":18}},{"source":"service.ts","name":null,"original":{"line":9,"column":23},"generated":{"line":160,"column":19}},{"source":"service.ts","name":null,"original":{"line":9,"column":23},"generated":{"line":160,"column":24}},{"source":"service.ts","name":null,"original":{"line":9,"column":23},"generated":{"line":160,"column":25}},{"source":"service.ts","name":null,"original":{"line":9,"column":23},"generated":{"line":160,"column":27}},{"source":"service.ts","name":null,"original":{"line":9,"column":23},"generated":{"line":160,"column":32}},{"source":"service.ts","name":null,"original":{"line":9,"column":23},"generated":{"line":160,"column":33}},{"source":"service.ts","name":null,"original":{"line":9,"column":36},"generated":{"line":160,"column":35}},{"source":"service.ts","name":null,"original":{"line":9,"column":23},"generated":{"line":160,"column":42}},{"source":"service.ts","name":null,"original":{"line":9,"column":43},"generated":{"line":160,"column":44}},{"source":"service.ts","name":null,"original":{"line":9,"column":43},"generated":{"line":160,"column":56}},{"source":"service.ts","name":null,"original":{"line":10,"column":15},"generated":{"line":165,"column":0}},{"source":"service.ts","name":null,"original":{"line":10,"column":15},"generated":{"line":165,"column":17}},{"source":"service.ts","name":null,"original":{"line":10,"column":15},"generated":{"line":165,"column":18}},{"source":"service.ts","name":null,"original":{"line":10,"column":15},"generated":{"line":166,"column":0}},{"source":"service.ts","name":null,"original":{"line":10,"column":15},"generated":{"line":167,"column":0}},{"source":"service.ts","name":null,"original":{"line":10,"column":21},"generated":{"line":167,"column":12}},{"source":"service.ts","name":null,"original":{"line":10,"column":26},"generated":{"line":167,"column":17}},{"source":"service.ts","name":null,"original":{"line":11,"column":7},"generated":{"line":167,"column":18}},{"source":"service.ts","name":null,"original":{"line":11,"column":14},"generated":{"line":167,"column":25}},{"source":"service.ts","name":null,"original":{"line":11,"column":14},"generated":{"line":167,"column":28}},{"source":"service.ts","name":null,"original":{"line":10,"column":26},"generated":{"line":167,"column":116}},{"source":"service.ts","name":null,"original":{"line":10,"column":15},"generated":{"line":167,"column":117}},{"source":"service.ts","name":null,"original":{"line":10,"column":15},"generated":{"line":167,"column":118}},{"source":"service.ts","name":null,"original":{"line":10,"column":8},"generated":{"line":170,"column":0}},{"source":"service.ts","name":null,"original":{"line":10,"column":8},"generated":{"line":170,"column":10}},{"source":"service.ts","name":null,"original":{"line":10,"column":12},"generated":{"line":170,"column":14}},{"source":"service.ts","name":null,"original":{"line":10,"column":15},"generated":{"line":170,"column":17}},{"source":"service.ts","name":null,"original":{"line":10,"column":15},"generated":{"line":170,"column":19}},{"source":"service.ts","name":null,"original":{"line":10,"column":15},"generated":{"line":170,"column":20}},{"source":"service.ts","name":null,"original":{"line":10,"column":15},"generated":{"line":170,"column":24}},{"source":"service.ts","name":null,"original":{"line":10,"column":8},"generated":{"line":170,"column":26}},{"source":"service.ts","name":null,"original":{"line":14,"column":2},"generated":{"line":171,"column":0}},{"source":"service.ts","name":null,"original":{"line":14,"column":2},"generated":{"line":171,"column":17}},{"source":"service.ts","name":null,"original":{"line":14,"column":2},"generated":{"line":171,"column":18}},{"source":"service.ts","name":null,"original":{"line":14,"column":2},"generated":{"line":172,"column":0}},{"source":"service.ts","name":null,"original":{"line":14,"column":2},"generated":{"line":173,"column":0}},{"source":"service.ts","name":null,"original":{"line":14,"column":9},"generated":{"line":173,"column":12}},{"source":"service.ts","name":null,"original":{"line":14,"column":13},"generated":{"line":173,"column":16}},{"source":"service.ts","name":null,"original":{"line":14,"column":14},"generated":{"line":173,"column":17}},{"source":"service.ts","name":null,"original":{"line":14,"column":9},"generated":{"line":173,"column":21}},{"source":"service.ts","name":null,"original":{"line":14,"column":2},"generated":{"line":173,"column":23}},{"source":"service.ts","name":null,"original":{"line":14,"column":2},"generated":{"line":173,"column":24}},{"source":"service.ts","name":null,"original":{"line":9,"column":23},"generated":{"line":176,"column":3}},{"source":"service.ts","name":null,"original":{"line":9,"column":23},"generated":{"line":176,"column":4}},{"source":"service.ts","name":null,"original":{"line":15,"column":1},"generated":{"line":177,"column":0}},{"source":"service.ts","name":null,"original":{"line":9,"column":7},"generated":{"line":177,"column":1}},{"source":"service.ts","name":null,"original":{"line":9,"column":13},"generated":{"line":179,"column":0}},{"source":"service.ts","name":null,"original":{"line":9,"column":13},"generated":{"line":179,"column":7}},{"source":"service.ts","name":null,"original":{"line":9,"column":13},"generated":{"line":179,"column":8}},{"source":"service.ts","name":null,"original":{"line":9,"column":13},"generated":{"line":179,"column":15}},{"source":"service.ts","name":null,"original":{"line":9,"column":20},"generated":{"line":179,"column":18}},{"source":"service.ts","name":null,"original":{"line":9,"column":13},"generated":{"line":179,"column":25}}],"sources":{"service.ts":"import { movieDbAppKey } from \"./app.const\";\r\n\r\nconst createBaseUrl = (): string => {\r\n  return `https://api.themoviedb.org/3/discover/movie?api_key=${movieDbAppKey}`;\r\n};\r\n\r\nconst baseUrl = createBaseUrl();\r\n\r\nexport const getData = async <T>(): Promise<T> => {\r\n  const json = await fetch(\r\n    `${baseUrl}&language=en-US&sort_by=popularity.desc&include_adult=false&include_video=false&page=1`\r\n  );\r\n\r\n  return json.json();\r\n};\r\n"},"lineCount":null}},"error":null,"hash":"0a890c70b40dc8ebe70b2b617182c364","cacheData":{"env":{}}}